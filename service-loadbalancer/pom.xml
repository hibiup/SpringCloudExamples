<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>HelloSpringCloud</artifactId>
        <groupId>pro.wangji</groupId>
        <version>${revision}</version>
    </parent>

    <artifactId>service-loadbalancer</artifactId>

    <dependencies>
        <!-- 支持 Cloud Config -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>

        <!-- 访问 service 的 client 同样需要成为 Eureka 的客户端，通过向 Eureka 提交服务名称来查询被负载均衡的服务地址 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>

        <!-- 让客户端在多个服务之间施行轮询访问。-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-loadbalancer</artifactId>
        </dependency>

        <!-- Load balancer 本身提供异步访问 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <!-- 加入 hystrix 断路器 -->
        <!--<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
        </dependency>-->

        <!-- 引入代理目标的接口定义 -->
        <dependency>
            <artifactId>config-service</artifactId>
            <groupId>pro.wangji</groupId>
            <version>${revision}</version>
        </dependency>
    </dependencies>

</project>